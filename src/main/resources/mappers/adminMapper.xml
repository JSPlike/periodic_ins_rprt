<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.api.reporting.mapper.adminMapper">

	<!-- 
		mybatis-config.xml의 typeAlias에 등록해두지 않았다면 
		
		<select id="selectUser" resultType="com.api.reporting.dto.UserVO" >
			SELECT ID, PW ,NAME FROM TEST
		</select>
		
		이렇게 해야 한다.
	-->
	
	<select id="site_count" resultType="int">
		<![CDATA[
		
			select	count(*)
			from 	tb_site
			where   1=1
		]]>
		<include refid="search"/>
	</select>
	
	<select id="show_site" resultType="SiteDTO">
		<![CDATA[
		
			select	site_id,
					site_name,
					start_time,
					end_time,
					contact_tel,
					location,
					address,
					manager_name,
					manager_mobile,
					site_email,
					site_detail,
					site_special
			from 	tb_site
			where   1=1
		]]>
		<include refid="search"/>
		<![CDATA[
			order by site_name
			limit #{pageStart},#{perPageNum}
		]]>
	</select>
	
	 <insert id="write_site"  >

			INSERT INTO tb_site
    		(
    		 site_id
			,site_name
			,start_time
			,end_time
			,contact_tel
			,location
			,address
			,manager_name
			,manager_mobile
		 	,site_email
		 	,site_detail
		 	,site_special
			)
    		values
    		(
    		 #{site_id}
		    ,#{site_name}
			,#{start_time}
			,#{end_time}
			,#{contact_tel}
			,#{location}
			,#{address}
			,#{manager_name}
			,#{manager_mobile}
		 	,#{site_email}
		 	,#{site_detail}
		 	,#{site_special}
    		)
	
    </insert>
	
	
	<sql id="search">
		<if test="searchType == 'site_id'.toString()">
			and site_id like CONCAT('%',#{keyword},'%')
		</if>
		<if test="searchType == 'site_name'.toString()">
			and site_name like CONCAT('%',#{keyword},'%')
		</if>
		<if test="searchType == 'location'.toString()">
			and location like CONCAT('%',#{keyword},'%')
		</if>
		<if test="searchType == 'manager_name'.toString()">
			and manager_name like CONCAT('%',#{keyword},'%')
		</if>
	</sql>
	
	<select id="read_site" resultType="SiteDTO">
			select	site_id,
					site_name,
					start_time,
					end_time,
					contact_tel,
					location,
					address,
					manager_name,
					manager_mobile,
					site_email,
					site_detail,
					site_special
			from 	tb_site
		   where    site_id = #{site_id}
	</select>
	
	<update id="update_site">
		update tb_site
		set    site_name     = #{site_name}     
		   	  ,start_time    = #{start_time}     
			  ,end_time      = #{end_time}       
			  ,contact_tel   = #{contact_tel}    
			  ,location      = #{location}       
			  ,address       = #{address}        
			  ,manager_name  = #{manager_name}   
			  ,manager_mobile= #{manager_mobile}
		      ,site_email    = #{site_email}
		      ,site_detail   = #{site_detail}
		      ,site_special  = #{site_special}
		where site_id = #{site_id}
	</update>
	
	
	<delete id="delete_site">
		delete from tb_site where site_id = #{site_id}
	</delete>
	
	<select id="show_code" resultType="CodeDTO">
		select ${code} code
		      ,${code_name} code_name
		  from ${table_name}
	</select>
	
	<sql id="show_module_default" >
			select a.module_serial
			      ,a.site_id
			      ,a.serial_name
			      ,a.detail
			      ,a.module_variety
			      ,b.variety_name
		          ,c.site_name
			 from tb_module a
  left outer join tb_module_variety b on (a.module_variety = b.module_variety)
	   inner join tb_site c on (a.site_id = c.site_id)
            where case when '${site_id}' = '' then 1=1 else a.site_id = '${site_id}' end
      		<![CDATA[
              and module_serial like '%${module_serial}%'
			]]>
            
              
	</sql>
	
	<select id="show_module" resultType="ModuleDTO">
		<include refid="show_module_default"/>
	    <![CDATA[
         order by c.site_name,a.module_variety,a.module_serial
			limit #{pageStart},#{perPageNum}
		]]>	    
	</select>
	
	<select id="module_count" resultType="int">
		select	count(*)
		from (
		<include refid="show_module_default"/>
		) z
	</select>

	
	<select id="read_module" resultType="ModuleDTO">
			select a.module_serial
			      ,a.site_id
			      ,a.serial_name
			      ,a.detail
			      ,a.module_variety
			      ,b.variety_name 
			 from tb_module a
  left outer join tb_module_variety b on a.module_variety = b.module_variety  
            where a.module_serial = #{module_serail}
	</select>
	
	<update id="update_module">
		update tb_module
		set    site_id        = #{site_id}     
		   	  ,serial_name    = #{serial_name}     
			  ,detail         = #{detail}       
			  ,module_variety = #{module_variety}    
		where module_serial   = #{module_serial}
	</update>
	
	 <insert id="write_module"  >

		INSERT INTO tb_module
   		(
   		 module_serial
   		,site_id
   		,serial_name
   		,detail
   		,module_variety
		)
   		values
   		(
   		 #{module_serial}
   		,#{site_id}
   		,#{serial_name}
   		,#{detail}
   		,#{module_variety}
   		)
	
    </insert>
	
	<select id="count_module_use" resultType="int">
		select count(*)
		from  tb_regist_activate
		where module_serial = #{module_serial}
	</select>
	
	<delete id="delete_module">
		delete from tb_module where module_serial = #{module_serial}
	</delete>
	
	<select id="module_variety_count" resultType="int">
		select	count(*)
		from tb_module_variety
	</select>
	
	<select id="show_moudle_kinds" resultType="ModuleVarietyDTO">
		select module_variety,variety_name
		from   tb_module_variety
	</select>
	
	<select id="read_module_kinds" resultType="ModuleVarietyDTO">
		select module_variety,variety_name
		from   tb_module_variety
		where  module_variety = ${module_variety}
	</select>	
	
	<update id="update_module_kinds">
		update tb_module_variety
		set 	variety_name = #{variety_name}
		where  module_variety = ${module_variety}
	</update>
	
	<select id="count_module_kinds" resultType="int">
		select count(*)
		from   tb_module
		where module_variety = #{module_variety}
	</select>
	
	<delete id="delete_module_kinds">
		delete from tb_module_variety
		where module_variety = #{module_variety}
	</delete>
	
	<insert id="write_module_kinds">
		insert into tb_module_variety
		(module_variety,variety_name)
		values
		(${module_variety},#{variety_name})
	</insert>
	
	<select id="show_regist_status" resultType="RegistStatusDTO">
		select code,code_hex,code_nm,code_message
		from tb_regist_status
	
	</select>
	
	<select id="regist_status_count" resultType="int">
		select count(*)
		from tb_regist_status
	</select>
	
	<select id="read_regist_status" resultType="RegistStatusDTO">
		select code,code_hex,code_nm,code_message
		from tb_regist_status
		where code = ${code}	
	</select>
	
	<update id="update_regist_status">
		update tb_regist_status
		set  code_hex = #{code_hex}
			,code_nm = #{code_nm}
			,code_message = #{code_message}
		where code = ${code}
	</update>
	
	<insert id="write_regist_status">
		insert into tb_regist_status
		(
		 code
		,code_hex
		,code_nm
		,code_message
		)
		values
		(
		${code}
	   ,#{code_hex}
	   ,#{code_nm}
	   ,#{code_message}
		)
		
	</insert>
	
	<select id="count_regist_kinds" resultType="int">
		select count(*)
		from tb_regist_activate
		where operation_code = #{code}
	</select>
	
	<delete id="delete_regist_status">
		delete from tb_regist_status
		where code = #{code}
	</delete>
	
</mapper>